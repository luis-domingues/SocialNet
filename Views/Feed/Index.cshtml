@model List<SocialNet.Models.Post>

@{
ViewData["Title"] = "Feed";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-lg-3 d-none d-lg-block">
            <div class="card shadow-sm">
                <div class="card-body text-center">
                    <h5 class="card-title">@User.Identity.Name</h5>
                    <p class="text-muted">Veja seu perfil e atualizações.</p>
                    <a asp-action="Profile" asp-controller="Users" class="btn btn-outline-primary w-100">Meu Perfil</a>
                </div>
            </div>
        </div>

        <!-- Feed principal -->
        <div class="col-lg-6">
            <div class="card shadow-sm mb-4">
                <div class="card-body">
                    <h5 class="card-title text-center" style="color: #6f42c1;">Bem-vindo ao SocialNET</h5>
                    <a asp-action="CreatePost" class="btn btn-primary w-100">Criar novo post</a>
                </div>
            </div>

            @foreach (var post in Model)
            {
            <div class="card mb-4 shadow-sm">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <a asp-action="ViewProfile" asp-controller="Users" asp-route-userId="@post.User.Id" class="text-dark fw-bold" style="text-decoration: none;">
                                @post.User.Username
                            </a>
                            <span class="text-muted small">@post.CreateAt.ToString("g")</span>
                        </div>
                        @if (post.UserId == int.Parse(User.Claims.First(c => c.Type == "UserId").Value))
                        {
                        <div class="dropdown">
                            <button class="btn btn-sm btn-light" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="bi bi-three-dots"></i>
                            </button>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownMenuButton">
                                <li>
                                    <a asp-action="EditPost" asp-route-postId="@post.Id" class="dropdown-item">Editar</a>
                                </li>
                                <li>
                                    <form asp-action="DeletePost" method="post">
                                        <input type="hidden" name="postId" value="@post.Id" />
                                        <button type="submit" class="dropdown-item text-danger">Excluir</button>
                                    </form>
                                </li>
                            </ul>
                        </div>
                        }
                    </div>

                    <p class="mt-3">@post.Content</p>
                    
                    <div class="d-flex justify-content-between align-items-center">
                        <form asp-action="ToggleLike" method="post" class="d-inline">
                            <input type="hidden" name="postId" value="@post.Id" />
                            <button type="submit" class="btn btn-sm @post.Likes.Any(l => l.UserId == int.Parse(User.Claims.First(c => c.Type == "UserId").Value)) ? btn-outline-primary">
                            <i class="bi bi-heart"></i>
                            Curtidas: @post.Likes.Count()
                            </button>
                        </form>

                        <button class="btn btn-sm btn-outline-secondary" data-bs-toggle="collapse" data-bs-target="#comments-@post.Id">
                            <i class="bi bi-chat"></i> Comentários
                        </button>
                    </div>
                    
                    <div id="comments-@post.Id" class="collapse mt-3">
                        <h6>Comentários</h6>
                        <div>
                            @foreach (var comment in post.Comments.Where(c => c.ParentCommentId == null).OrderBy(c => c.CommentedAt))
                            {
                            @Html.Partial("_CommentPartial", comment)
                            }
                        </div>
                        <form asp-action="AddComment" method="post" class="mt-2">
                            <input type="hidden" name="postId" value="@post.Id" />
                            <div class="form-group">
                                <textarea name="content" class="form-control" placeholder="Escreva um comentário..." required></textarea>
                            </div>
                            <button type="submit" class="btn btn-sm btn-primary mt-2">Comentar</button>
                        </form>
                    </div>
                </div>
            </div>
            }
        </div>
        
        <div class="col-lg-3 d-none d-lg-block">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h6 class="card-title">Sugestões para você</h6>
                    <!-- Sugestões de usuários -->
                    <ul class="list-group list-group-flush">
                        @* Exemplo de sugestão fixa *@
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <a asp-action="ViewProfile" asp-controller="Users" asp-route-userId="1" class="text-dark" style="text-decoration: none;">Usuário Exemplo</a>
                            <form asp-action="ToggleFollow" method="post">
                                <input type="hidden" name="userId" value="1" />
                                <button type="submit" class="btn btn-sm btn-outline-primary">Seguir</button>
                            </form>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>