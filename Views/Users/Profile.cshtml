@model SocialNet.Models.User

@{
ViewData["Title"] = "Perfil";
}

<div class="container mt-4">
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <h2 class="mb-1">@Model.Username</h2>
            <p class="text-muted">@Model.Email</p>
            
            <div class="d-flex mb-3">
                <div class="me-4">
                    <strong>@Model.Followers.Count()</strong>
                    <p class="text-muted"><a asp-action="Followers" style="text-decoration: none; color: inherit;">Seguidores</a></p>
                </div>
                <div>
                    <strong>@Model.Following.Count()</strong>
                    <p class="text-muted"><a asp-action="Following" style="text-decoration: none; color: inherit;">Seguindo</a></p>
                </div>
            </div>

            @if (Model.Id != int.Parse(User.Claims.First(c => c.Type == "UserId").Value))
            {
            <form asp-action="ToggleFollow" asp-controller="Users" method="post" class="d-inline">
                <input type="hidden" name="userId" value="@Model.Id" />
                <button type="submit" class="btn @(Model.Followers.Any(f => f.FollowerId == int.Parse(User.Claims.First(c => c.Type == "UserId").Value)) ? "btn-danger" : "btn-primary")">
                    @(Model.Followers.Any(f => f.FollowerId == int.Parse(User.Claims.First(c => c.Type == "UserId").Value)) ? "Deixar de seguir" : "Seguir")
                </button>
            </form>
            }

            <div class="mt-4">
                <h5>Sobre mim:</h5>
                <p class="text-muted">@Model.Bio</p>
                @if (Model.Id == int.Parse(User.Claims.FirstOrDefault(c => c.Type == "UserId").Value))
                {
                <form asp-action="UpdateBio" method="post" class="mt-3">
                    <div class="form-group">
                        <textarea name="bio" class="form-control" placeholder="Escreva algo sobre você...">@Model.Bio</textarea>
                    </div>
                    <button type="submit" class="btn btn-primary mt-2">Salvar</button>
                </form>
                }
            </div>
            
            @if (Model.Id == int.Parse(User.Claims.First(c => c.Type == "UserId").Value))
            {
            <div class="d-flex gap-2 mt-4">
                <a asp-action="EditProfile" class="btn btn-outline-primary flex-fill">Editar Perfil</a>
                <form asp-action="DeleteAccount" method="post" class="flex-fill" onsubmit="return confirm('Você tem certeza que deseja deletar sua conta?')">
                    <button type="submit" class="btn btn-outline-danger w-100">Deletar Conta</button>
                </form>
            </div>
            }
        </div>
    </div>

    <!-- Lista de Posts -->
    <h3>Posts</h3>
    <div>
        @if (Model.Posts.Any())
        {
        @foreach (var post in Model.Posts.OrderByDescending(p => p.CreateAt))
        {
        <div class="card shadow-sm mb-3">
            <div class="card-body">
                <p class="card-text">@post.Content</p>
                <p class="text-muted small">@post.CreateAt.ToString("g")</p>
            </div>
        </div>
        }
        }
        else
        {
        <p class="text-muted">Nenhum post encontrado.</p>
        }
    </div>
</div>